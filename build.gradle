group 'spark-english'

buildscript {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        jcenter()
    }
    dependencies {
        classpath('se.transmode.gradle:gradle-docker:1.2')
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.5.2.RELEASE")
    }
}





subprojects { subject ->
    apply plugin: 'docker'
    apply plugin: 'org.springframework.boot'
    apply plugin: 'java'
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
    subject.version = '1.0.0'
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        mavenCentral()
    }
    dependencyManagement {
        imports {
            mavenBom 'org.springframework.cloud:spring-cloud-dependencies:Dalston.RELEASE'
        }
    }

    tasks.withType(Jar) {
        destinationDir = file("$rootDir/build/libs/")
    }

    task buildDocker(type: Docker, dependsOn: build) {
        push = true
        applicationName = jar.baseName
        dockerfile = file('Dockerfile')
        doFirst {
            copy {
                from jar
                into stageDir
            }
        }
    }

    if (subject.name != "sparke-module-core") {
        sourceSets {
            main {
                java.srcDirs = ['src/main/java', '../sparke-module-core/src/main/java']
                resources.srcDirs=['src/main/resources', '../sparke-module-core/src/main/resources']
            }
        }
    }

//    apply plugin: 'war'
    dependencies {
        compile 'com.alibaba:fastjson:1.2.31'
        compile 'net.spy:spymemcached:2.12.3'
        compile 'com.qiniu:qiniu-java-sdk:7.2.+'
        compile group: 'com.github.bingoohuang', name: 'patchca', version: '0.0.1'
        testCompile group: 'junit', name: 'junit', version: '4.12'
        compile("org.springframework.boot:spring-boot-starter-test")
        compile('org.springframework.boot:spring-boot-starter-cache')
        compile 'org.springframework.cloud:spring-cloud-starter-eureka'
        compile 'org.springframework.boot:spring-boot-starter-actuator'
        compile 'org.springframework.cloud:spring-cloud-starter-feign'
//        compile('org.springframework.cloud:spring-cloud-starter-zipkin')


        //    数据库所需开始
        compile "org.mybatis.spring.boot:mybatis-spring-boot-starter:1.3.0"
        compile "tk.mybatis:mapper-spring-boot-starter:1.1.1"
        compile 'com.github.pagehelper:pagehelper:5.0.1'
        compile("mysql:mysql-connector-java")
        compile 'com.netflix.feign:feign-jackson:8.18.0'
        compile group: 'com.alibaba', name: 'druid', version: '1.0.28'
        //    数据库所需结束
        compile 'net.logstash.logback:logstash-logback-encoder:4.11'
        //开发时注释掉config，可使用本地配置文件,但不要提交到git
        compile 'org.springframework.cloud:spring-cloud-starter-config'
//            war包所需开始
//            providedRuntime ("org.springframework.boot:spring-boot-starter-tomcat")
//            war包所需结束

    }

}
